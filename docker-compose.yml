version: "3.4"

services:
  apiserver:
    container_name: expected-apiserver
    restart: on-failure
    build:
      context: .
      dockerfile: cmd/expected-apiserver/Dockerfile
    environment:
      - "ADDR=:3000"
      - "POSTGRES_ADDR=${POSTGRES_ADDR:-postgres://expected:expected@postgres/expected?sslmode=disable}"
      - "RABBITMQ_ADDR=${RABBITMQ_ADDR:-amqp://expected:expected@rabbitmq/expected}"
    depends_on:
      - postgres
      - nats
    ports:
      - 3000:3000

  registryhook:
    container_name: expected-registryhook
    restart: on-failure
    build:
      context: .
      dockerfile: cmd/expected-registryhook/Dockerfile
    environment:
      - "ADDR=:3001"
      - "REGISTRY_URL=http://registry:5000"
      - "POSTGRES_ADDR=${POSTGRES_ADDR:-postgres://expected:expected@postgres/expected?sslmode=disable}"
      - "RABBITMQ_ADDR=${RABBITMQ_ADDR:-amqp://expected:expected@rabbitmq/expected}"
      - "CERTS_PUBLIC_KEY=/certs/server.crt"
      - "CERTS_PRIVATE_KEY=/certs/server.key"
    depends_on:
      - postgres
      - nats
    ports:
      - 3001:3001
    volumes:
      - ./certs:/certs

  authserver:
    container_name: expected-authserver
    restart: on-failure
    build:
      context: .
      dockerfile: cmd/expected-authserver/Dockerfile
    environment:
      - "ADDR=:3002"
      - "POSTGRES_ADDR=${POSTGRES_ADDR:-postgres://expected:expected@postgres/expected?sslmode=disable}"
      - "GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}"
      - "GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}"
      - "CERTS_PUBLIC_KEY=/certs/server.crt"
      - "CERTS_PRIVATE_KEY=/certs/server.key"
      - "DASHBOARD_URL=${DASHBOARD_URL:-http://localhost:8080}"
    depends_on:
      - postgres
    ports:
      - 3002:3002
    volumes:
      - ./certs:/certs

  registry:
    container_name: expected-registry
    restart: on-failure
    image: registry:latest
    environment:
      - "REGISTRY_STORAGE_DELETE_ENABLED=true"
      - "REGISTRY_AUTH=token"
      - "REGISTRY_AUTH_TOKEN_REALM=${REGISTRY_AUTH_TOKEN_REALM:-http://localhost:3002/auth/registry}"
      - "REGISTRY_AUTH_TOKEN_SERVICE=registry"
      - "REGISTRY_AUTH_TOKEN_ISSUER=auth_registry"
      - "REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/server.crt"
      - "REGISTRY_AUTH_TOKEN_AUTOREDIRECT=false"
      - "REGISTRY_NOTIFICATIONS_ENDPOINTS=- name: expected-hook\n  url: ${REGISTRY_AUTH_SERVER:-http://registryhook:3001/hook}\n  timeout: 10s\n  threshold: 8\n  backoff: 10s"
    depends_on:
      - registryhook
    ports:
      - 5000:5000
    volumes:
      - ./certs:/certs

  postgres:
    container_name: expected-postgres
    image: postgres:alpine
    restart: on-failure
    environment:
      - "POSTGRES_USER=expected"
      - "POSTGRES_PASSWORD=expected"
      - "TZ=Europe/Paris"
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  nats:
    container_name: expected-nats
    image: nats
    restart: on-failure
    ports:
      - 4222:4222
volumes:
  postgres: {}
