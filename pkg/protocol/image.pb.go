// Code generated by protoc-gen-go. DO NOT EDIT.
// source: image.proto

package protocol

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DeleteImageEvent struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	NamespaceId string `protobuf:"bytes,2,opt,name=namespaceId" json:"namespaceId,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Tag         string `protobuf:"bytes,4,opt,name=tag" json:"tag,omitempty"`
	Digest      string `protobuf:"bytes,5,opt,name=digest" json:"digest,omitempty"`
}

func (m *DeleteImageEvent) Reset()                    { *m = DeleteImageEvent{} }
func (m *DeleteImageEvent) String() string            { return proto.CompactTextString(m) }
func (*DeleteImageEvent) ProtoMessage()               {}
func (*DeleteImageEvent) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *DeleteImageEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteImageEvent) GetNamespaceId() string {
	if m != nil {
		return m.NamespaceId
	}
	return ""
}

func (m *DeleteImageEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteImageEvent) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *DeleteImageEvent) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

func init() {
	proto.RegisterType((*DeleteImageEvent)(nil), "protocol.DeleteImageEvent")
}

func init() { proto.RegisterFile("image.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 144 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xcc, 0x4d, 0x4c,
	0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xc9, 0xf9, 0x39, 0x4a, 0x4d,
	0x8c, 0x5c, 0x02, 0x2e, 0xa9, 0x39, 0xa9, 0x25, 0xa9, 0x9e, 0x20, 0x79, 0xd7, 0xb2, 0xd4, 0xbc,
	0x12, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0xa6, 0xcc,
	0x14, 0x21, 0x05, 0x2e, 0xee, 0xbc, 0xc4, 0xdc, 0xd4, 0xe2, 0x82, 0xc4, 0xe4, 0x54, 0xcf, 0x14,
	0x09, 0x26, 0xb0, 0x04, 0xb2, 0x90, 0x90, 0x10, 0x17, 0x0b, 0x88, 0x2b, 0xc1, 0x0c, 0x96, 0x02,
	0xb3, 0x85, 0x04, 0xb8, 0x98, 0x4b, 0x12, 0xd3, 0x25, 0x58, 0xc0, 0x42, 0x20, 0xa6, 0x90, 0x18,
	0x17, 0x5b, 0x4a, 0x66, 0x7a, 0x6a, 0x71, 0x89, 0x04, 0x2b, 0x58, 0x10, 0xca, 0x4b, 0x62, 0x03,
	0x3b, 0xc7, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xb7, 0x2e, 0xc3, 0x02, 0xa4, 0x00, 0x00, 0x00,
}
