version: "3.4"
services:
  postgres:
    container_name: expected-postgres
    image: timescale/timescaledb
    restart: always
    environment:
      - "POSTGRES_USER=expected"
      - "POSTGRES_PASSWORD=expected"
      - "TZ=Europe/Paris"
    network_mode: host
    volumes:
      - postgres:/var/lib/postgresql/data

  stan:
    container_name: expected-stan
    image: nats-streaming
    restart: always
    ports:
      - 4222:4222

  registry:
    container_name: expected-registry
    restart: always
    image: registry:latest
    environment:
      - "REGISTRY_STORAGE_DELETE_ENABLED=true"
      - "REGISTRY_AUTH=token"
      - "REGISTRY_AUTH_TOKEN_REALM=${REGISTRY_AUTH_TOKEN_REALM:-http://localhost:3002/auth/registry}"
      - "REGISTRY_AUTH_TOKEN_SERVICE=registry"
      - "REGISTRY_AUTH_TOKEN_ISSUER=auth_registry"
      - "REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/server.crt"
      - "REGISTRY_AUTH_TOKEN_AUTOREDIRECT=false"
      - "REGISTRY_NOTIFICATIONS_ENDPOINTS=- name: expected-hook\n  url: ${REGISTRY_AUTH_SERVER:-http://localhost:3000/hook}\n  timeout: 10s\n  threshold: 8\n  backoff: 10s"
    network_mode: host
    volumes:
      - ../certs:/certs
volumes:
  postgres: {}
